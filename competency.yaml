task1:
  desc: >
    Main java application

    Request schema: 
    User write console  ->
    SOAP/REST client send request ->
    Server accept request in REST controller or SOAP web services ->
    Controller proccess request and send it to service ->
    Service call repository ->
    Repository save data or get it from database -> 
    Service proccess data and send it to controller or web service ->
    Controller or web service send response to SOAP/REST client ->
    Client proccess response and print result for User
  programming:
    - type: java
      tech:
        - Spring
        - Spring Boot
        - Spring Data JPA
        - Hibernate
        - Swagger OpenApiv3
        - Apache CXF + XSD
        - liquibase
        - Class loaders
        - Gradle plugins
        - Spring Shell
    - type: groovy
      tech:
        - JUnit
        - Mockito
        - Spring Boot test
    - MS SQL
    - Gradle  
    - Github Maven Repos
    - type: protocols
      tech:
        - SOAP
        - REST
  devops:
    - Linux
    - Docker
    - Docker compose

task2:
  desc: >
    Deploy application to Kubernetes cluster
  devops:
    - Linux
    - Docker
    - Google Cloud
    - Kubernetes
    - Helm

task3:
  desc: >
    Configure CI/CD pipeline with Jenkins using Kubernetes plugin
  programming:
    - Bash
    - Groovy
  devops:
    - Linux
    - Docker
    - Google Cloud
    - Kubernetes
    - Helm
    - Jenkins

task4:
  desc: >
    Add communication between java server and groovy server using gRPC protocol
  programming:
    - type: groovy
      tech:
        - Spring
        - Spring Boot
        - Spring Data
        - Protobuf
    - type: java
      tech:
        - Spring
        - Spring Boot
        - Spring Data
        - Protobuf
    - Cassandra
    - Gradle
    - type: protocols
      tech:
        - gRPC
  devops:
    - Linux
    - Docker
    - Kubernetes

task5:
  desc: >
    Add communication between java server and groovy server with Kafka message queue
  programming:
    - type: groovy
      tech:
        - Spring
        - Spring Boot
        - Spring Kafka
    - type: java
      tech:
        - Spring
        - Spring Boot
        - Spring Kafka
    - Kafka
    - Gradle
  devops:
    - Linux
    - Docker
    - Kubernetes
    - Helm

task6:
  desc: >
    Add monitoring with Prometheus using Micrometer and AspectJ on java side 
    and Prometheus operator services in cluster with ServiceMonitor object
  programming:
    - type: java
      tech:
        - Spring
        - Spring Boot
        - Spring Aspects
        - Micrometer
    - Gradle
  devops:
    - Linux
    - Docker
    - Google Cloud
    - Kubernetes
    - Helm
    - Prometheus
    - Grafana
    - Prometheus operator

task7:
  desc: >
    Fix gravana dashboard
  devops:
    - Grafana
    - Prometheus

task8:
  desc: >
    Load testing java server
  programming:
    - type: scala
      tech:
        - sbt
        - Gatling
  - SoapUI

task9:
  desc: >
    Find memory leak in java application
  devops:
    - Grafana
    - Prometheus
  - VisualVM

task10:
  desc: >
    Writing unit tests
  programming:
    - type: java
      tech:
        - JUnit
        - Mockito
