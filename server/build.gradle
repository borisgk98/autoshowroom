apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.openapi.generator'
apply plugin: 'space.borisgk.crudgeneration'

apply plugin: 'io.spring.dependency-management'

group = 'com.mera.borisgk98.autoshowroom'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    rest
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE")
        classpath "org.openapitools:openapi-generator-gradle-plugin:3.3.4"
        classpath 'space.borisgk:crudgeneration:0.1'
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web-services")
//    compile("org.apache.cxf:cxf-spring-boot-starter-jaxws:3.3.1")
//    compile("wsdl4j:wsdl4j")
    compile("org.projectlombok:lombok")
//    compile("org.liquibase:liquibase-core")
//    compile("com.h2database:h2")
    compile("io.springfox:springfox-swagger-ui:2.9.2")
    compile("io.springfox:springfox-swagger2:2.9.2")
//    compile("org.apache.cxf:cxf-spring-boot-starter-jaxrs:3.3.1")
//    compile("org.apache.cxf:cxf-rt-rs-service-description-openapi-v3:3.3.1")
    compile("org.springframework.boot:spring-boot-starter-log4j2")
    compile("com.microsoft.sqlserver:mssql-jdbc:7.2.1.jre8")
}


openApiGenerate {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/autoshowroom.yaml".toString()
    outputDir = "$projectDir".toString()
    apiPackage = ("com.mera.borisgk98.autoshowroom.server.rest.api").toString()
    skipOverwrite = true
    invokerPackage = ("com.mera.borisgk98.autoshowroom.server.rest.invoker").toString()
    modelPackage = ("com.mera.borisgk98.autoshowroom.server.models").toString()
    groupId = ("com.mera.borisgk98.autoshowroom.server").toString()
    modelFilesConstrainedTo = [
            "Error"
    ]
    configOptions = [
            dateLibrary: "java8",
            configPackage: "com.mera.borisgk98.autoshowroom.server.config.openapi",
//            interfaceOnly: true
    ]
    systemProperties = [
            apis           : "",
            models         : "",
            supportingFiles: ""
    ]
}

openApiValidate {
    inputSpec = "$projectDir/../autoshowroom.yaml".toString()
}

springBoot {
    mainClassName = 'com.mera.borisgk98.autoshowroom.server.ServerApplication'
}

crudGenerationSetting {
    srcRoot = "$projectDir/src/main/java"
    modelPackage = "$projectDir/src/main/java/com/mera/borisgk98/autoshowroom/server/models"
    generationRoot = "$projectDir/src/main/java"
    yamlPathTemplateSrc = "$projectDir/src/main/resources/templates/Path"
    yamlGenerationOut = "$projectDir/src/main/resources/paths.yaml"
    generationPackages = [
            "com.mera.borisgk98.autoshowroom.server.rest.api",
            "com.mera.borisgk98.autoshowroom.server.repositories",
            "com.mera.borisgk98.autoshowroom.server.services",
            "com.mera.borisgk98.autoshowroom.server.services"
    ]
    generationTemplates = [
            "$projectDir/src/main/resources/ApiController",
            "$projectDir/src/main/resources/Repository",
            "$projectDir/src/main/resources/Service",
            "$projectDir/src/main/resources/ServiceImpl"
    ]
}