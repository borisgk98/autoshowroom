package com.mera.borisgk98.autoshowroom.server.soap;

import com.mera.borisgk98.autoshowroom.server.exceptions.ModelNotFound;
import com.mera.borisgk98.autoshowroom.server.models.$Model$;
import com.mera.borisgk98.autoshowroom.server.services.$Model$Service;
import com.mera.borisgk98.autoshowroom.server.services.CrudService;
import lombok.SneakyThrows;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import io.micrometer.core.annotation.Timed;

import javax.jws.WebService;
import java.util.List;

@Component
@WebService(serviceName = "$model$Service", portName = "$model$ServicePort")
public class $Model$WebServiceImpl implements $Model$WebService {

    @Autowired
    protected $Model$Service service;

    @Override
    @Timed(value = "soap")
    public $Model$ create$Model$($Model$ m) {
        return service.create(m);
    }

    @Override
    @Timed(value = "soap")
    public $Model$ read$Model$(Integer id) throws ModelNotFound {
        return service.read(id);
    }

    @Override
    @Timed(value = "soap")
    public $Model$ update$Model$($Model$ m) throws ModelNotFound {
        return service.update(m);
    }

    @Override
    @Timed(value = "soap")
    public void delete$Model$(Integer id) throws ModelNotFound {
        service.delete(id);
    }

    @Override
    @Timed(value = "soap")
    public List<$Model$> getAll$Model$() {
        return service.getAll();
    }

    @Override
    @Timed(value = "soap")
    public List<$Model$> getRange$Model$(Integer offset, Integer limit) {
        return service.getRange(offset, limit);
    }
}
