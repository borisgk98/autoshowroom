package com.mera.borisgk98.autoshowroom.soapclient.service;

import com.mera.borisgk98.autoshowroom.client.model.$Model$;
import com.mera.borisgk98.autoshowroom.client.tool.Converter;
import com.mera.borisgk98.autoshowroom.server.soap.$Model$WebService;
import com.mera.borisgk98.autoshowroom.server.soap.$Modelufl$Service;
import com.mera.borisgk98.autoshowroom.server.soap.ModelNotFound_Exception;
import org.springframework.stereotype.Component;
import org.springframework.context.annotation.Primary;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.stream.Collectors;

@Component
@Primary
public class $Model$ServiceImpl implements com.mera.borisgk98.autoshowroom.client.service.$Model$Service {

    $Model$WebService port;

    {
        $Modelufl$Service ss = new $Modelufl$Service($Modelufl$Service.WSDL_LOCATION,
                new QName("http://soap.server.autoshowroom.borisgk98.mera.com/", "$model$Service")
        );
        port = ss.get$Modelufl$ServicePort();
    }

    @Override
    public $Model$ create($Model$ m) {
        com.mera.borisgk98.autoshowroom.server.soap.$Model$ dto
                = Converter.convert(m, com.mera.borisgk98.autoshowroom.server.soap.$Model$.class);
        return Converter.convert(port.create$Model$(dto), $Model$.class);
    }

    @Override
    public $Model$ read(Integer id) throws com.mera.borisgk98.autoshowroom.client.exception.ModelNotFound {
        try {
            return Converter.convert(port.read$Model$(id), $Model$.class);
        }
        catch(ModelNotFound_Exception exc) {
            throw new com.mera.borisgk98.autoshowroom.client.exception.ModelNotFound();
        }
    }

    @Override
    public $Model$ update($Model$ m) throws com.mera.borisgk98.autoshowroom.client.exception.ModelNotFound {
        try {
            com.mera.borisgk98.autoshowroom.server.soap.$Model$ dto
                    = Converter.convert(m, com.mera.borisgk98.autoshowroom.server.soap.$Model$.class);
            return Converter.convert(port.update$Model$(dto), $Model$.class);
        }
        catch(ModelNotFound_Exception exc) {
            throw new com.mera.borisgk98.autoshowroom.client.exception.ModelNotFound();
        }
    }

    @Override
    public void delete(Integer id) throws com.mera.borisgk98.autoshowroom.client.exception.ModelNotFound {
        try {
            port.delete$Model$(id);
        }
        catch(ModelNotFound_Exception exc) {
            throw new com.mera.borisgk98.autoshowroom.client.exception.ModelNotFound();
        }
    }

    @Override
    public List<$Model$> getAll() {
        return port.getAll$Model$()
                .stream()
                .map(x -> Converter.convert(x, $Model$.class))
                .collect(Collectors.toList());
    }

    @Override
    public List<$Model$> getRange(Integer offset, Integer limit) {

        return port.getRange$Model$(offset, limit)
                .stream()
                .map(x -> Converter.convert(x, $Model$.class))
                .collect(Collectors.toList());
    }
}
