
package com.mera.borisgk98.autoshowroom.soapclient.generated;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import com.mera.borisgk98.autoshowroom.soapclient.model.Order;

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.annotation.Generated;
import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 3.3.1
 * 2019-05-24T02:14:59.931+03:00
 * Generated source version: 3.3.1
 *
 */
@Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2019-05-24T02:14:59.931+03:00", comments = "Apache CXF 3.3.1")
public final class OrderWebService_OrderServicePort_Client {

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2019-05-24T02:14:59.931+03:00")
    private static final QName SERVICE_NAME = new QName("http://soap.server.autoshowroom.borisgk98.mera.com/", "orderService");

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2019-05-24T02:14:59.931+03:00")
    private OrderWebService_OrderServicePort_Client() {
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2019-05-24T02:14:59.931+03:00")
    public static void main(String args[]) throws Exception {
        URL wsdlURL = OrderService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        OrderService ss = new OrderService(wsdlURL, SERVICE_NAME);
        OrderWebService port = ss.getOrderServicePort();

        {
        System.out.println("Invoking getAllOrder...");
        java.util.List<Order> _getAllOrder__return = port.getAllOrder();
        System.out.println("getAllOrder.result=" + _getAllOrder__return);


        }
        {
        System.out.println("Invoking readOrder...");
        Integer _readOrder_arg0 = null;
        try {
            Order _readOrder__return = port.readOrder(_readOrder_arg0);
            System.out.println("readOrder.result=" + _readOrder__return);

        } catch (ModelNotFound e) {
            System.out.println("Expected exception: ModelNotFound_Class has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking createOrder...");
        Order _createOrder_arg0 = null;
        Order _createOrder__return = port.createOrder(_createOrder_arg0);
        System.out.println("createOrder.result=" + _createOrder__return);


        }
        {
        System.out.println("Invoking deleteOrder...");
        Integer _deleteOrder_arg0 = null;
        try {
            port.deleteOrder(_deleteOrder_arg0);

        } catch (ModelNotFound e) {
            System.out.println("Expected exception: ModelNotFound_Class has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking getRangeOrder...");
        Integer _getRangeOrder_arg0 = null;
        Integer _getRangeOrder_arg1 = null;
        java.util.List<Order> _getRangeOrder__return = port.getRangeOrder(_getRangeOrder_arg0, _getRangeOrder_arg1);
        System.out.println("getRangeOrder.result=" + _getRangeOrder__return);


        }
        {
        System.out.println("Invoking updateOrder...");
        Order _updateOrder_arg0 = null;
        try {
            Order _updateOrder__return = port.updateOrder(_updateOrder_arg0);
            System.out.println("updateOrder.result=" + _updateOrder__return);

        } catch (ModelNotFound e) {
            System.out.println("Expected exception: ModelNotFound_Class has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
